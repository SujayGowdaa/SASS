@import url("https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap");
.test-btn {
  background: #9900ff;
}

/*
@debug map-get($colors, 'purple');
@debug map-has-key($colors, 'secondary');
@debug map-has-key($colors, 'tertiary');
@debug map-remove($colors, 'primary');
@debug map-merge(
  $colors,
  (
    'pink': #ffc0cb,
  )
);
*/
/*
Explanation of Each SASS Operation

map-get($colors, 'purple'):
Retrieves the value associated with the key 'purple' from the $colors map.
Stores the result in the variable $purple-color.

map-has-key($colors, 'secondary'):
Checks if the key 'secondary' exists in the $colors map.
Stores the result (boolean value) in the variable $has-secondary.

map-has-key($colors, 'tertiary'):
Checks if the key 'tertiary' exists in the $colors map.
Stores the result (boolean value) in the variable $has-tertiary.

map-remove($colors, 'primary'):
Removes the key 'primary' and its associated value from the $colors map.
Stores the resulting map in the variable $colors without primary.

map-merge($colors, ('pink': #ffc0cb)):
Merges a new key-value pair ('pink': #ffc0cb) into the $colors map.
Stores the resulting map in the variable $colors with pink.

By removing the @debug statements and adding comments, the code remains clear and maintainable, allowing you to understand the purpose and outcome of each operation.
*/
/* reset styles */
* {
  color: inherit;
  margin: 0;
}

body {
  font-family: Poppins;
}

ul {
  padding: 0;
  list-style-type: none;
}

a {
  text-decoration: none;
}

hr {
  border: 0;
  border-top: 1px dotted #efefef;
}

img {
  max-width: 100%;
}

.test {
  color: #326dee;
}

/* 
The math module in SASS provides functions for mathematical operations, making it easier to perform calculations directly in your stylesheets. Some common functions in the math module include:
math.div($number1, $number2): Divides $number1 by $number2.
math.round($number): Rounds $number to the nearest whole number.
math.ceil($number): Rounds $number up to the nearest whole number.
math.floor($number): Rounds $number down to the nearest whole number.
math.abs($number): Returns the absolute value of $number.
*/
.card {
  display: block;
  padding: 0.75rem;
  border: 1px solid #ddd;
  box-shadow: 1px 3px 5px rgba(0, 0, 0, 0.1);
  border-radius: 10px;
}
.card .card-title {
  font-size: 1.5rem;
  padding-bottom: 0.75rem;
  font-weight: bold;
}
.card .card-body {
  font-size: 1rem;
}
.card a {
  text-decoration: underline;
  color: #326dee;
}

/* 
The @debug directive in SASS is used to print the value of a variable or an expression to the console during compilation. This can be extremely useful for debugging your stylesheets, as it allows you to see the values of your variables and calculations at specific points in your code.
 */